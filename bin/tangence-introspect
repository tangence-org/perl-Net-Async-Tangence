#!/usr/bin/perl -w

use strict;

use Tangence::Connection;

use IO::Async 0.14;
use IO::Async::Loop::IO_Ppoll;

my $loop = IO::Async::Loop::IO_Ppoll->new();
$loop->enable_childmanager;

my $URL = shift @ARGV or die "Need URL as argv[1]\n";

my $conn = Tangence::Connection->new(
   on_closed => sub {
      print STDERR "Connection closed\n";
      exit(0);
   },
   on_error => sub {
      my ( $message ) = @_;
      print STDERR "Error: $message\n";
      $loop->loop_stop;
   },
);

$loop->add( $conn );

$conn->connect( 
   $URL,
   on_connected => sub {},
);

my $registry;
$loop->loop_once until defined( $registry = $conn->get_registry );

if( !@ARGV ) {
   $registry->get_property(
      property => "objects",

      on_value => sub {
         my ( $objshash ) = @_;

         foreach my $id ( sort keys %$objshash ) {
            my $desc = $objshash->{$id};

            printf "%-6d: %s\n", $id, $desc;
         }

         $loop->loop_stop;
      },

   );
}
elsif( $ARGV[0] eq "-i" ) {
   shift @ARGV; # eat -i
   my $objid = shift @ARGV;

   require Data::Dump;

   $registry->call_method(
      method  => "get_by_id",
      args    => [ $objid ],

      on_result => sub {
         my ( $obj ) = @_;
         print Data::Dump::dump( $obj->introspect ) . "\n";
         $loop->loop_stop;
      },
   );
}
elsif( $ARGV[0] eq "-p" ) {
   shift @ARGV; # eat -p
   my $objid    = shift @ARGV;
   my $property = shift @ARGV;

   require Data::Dump;

   $registry->call_method(
      method => "get_by_id",
      args   => [ $objid ],

      on_result => sub {
         my ( $obj ) = @_;

         $obj->get_property(
            property => $property,

            on_value => sub {
               my ( $value ) = @_;
               print Data::Dump::dump( $value ) . "\n";
               $loop->loop_stop;
            },
         );
      },
   );
}
else {
   die "Unrecognised operation $ARGV[0]\n";
}

$loop->loop_forever;
